{
	"id": "b05fc8f07b71b6424e251e7d65d0ce79",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SelfDestructSender.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.20; // Same Solidity version as the EtherVault\r\n\r\n/**\r\n * @title SelfDestructSender\r\n * @dev A simple contract to receive Ether and then self-destruct, sending its balance\r\n * to a target address. Used for the EtherVault assignment self-destruct challenge.\r\n */\r\ncontract SelfDestructSender {\r\n    // The address of the EtherVault contract where the Ether will be sent.\r\n    address payable immutable etherVaultAddress;\r\n\r\n    // The exact amount required by the EtherVault's self-destruct challenge.\r\n    uint256 public constant REQUIRED_AMOUNT = 0.0005 ether;\r\n\r\n    /**\r\n     * @dev Constructor sets the target EtherVault address.\r\n     * @param _etherVaultAddress The address of the deployed EtherVault contract.\r\n     */\r\n    constructor(address payable _etherVaultAddress) {\r\n        require(_etherVaultAddress != address(0), \"EtherVault address cannot be zero.\");\r\n        etherVaultAddress = _etherVaultAddress;\r\n    }\r\n\r\n    /**\r\n     * @dev This function allows the contract to receive Ether.\r\n     * It's triggered when Ether is sent to this contract's address\r\n     * without calling a specific function.\r\n     */\r\n    receive() external payable {\r\n        // No specific logic needed here for this assignment,\r\n        // just needs to be payable to receive funds.\r\n    }\r\n\r\n    /**\r\n     * @dev Triggers the self-destruct mechanism.\r\n     * This sends the contract's entire balance to the etherVaultAddress\r\n     * and removes the contract code from the blockchain (in pre-EIP-6780 behavior).\r\n     * Includes the specific require check required by the assignment.\r\n     *\r\n     * NOTE: 'selfdestruct' is deprecated and its behavior changed with EIP-6780 (Cancun hard fork).\r\n     * For new contracts deployed post-Cancun, it might not fully remove contract code/storage\r\n     * unless created in the same transaction. However, this assignment specifically requires\r\n     * using 'selfdestruct' with a particular error message, indicating it's testing\r\n     * understanding of this concept as relevant to the challenge environment.\r\n     * Therefore, we use 'selfdestruct' here as required by the assignment instructions.\r\n     */\r\n    function triggerSelfDestruct() external {\r\n        // Check if the contract's current balance is EXACTLY the required amount.\r\n        // This is the specific requirement for the assignment's challenge.\r\n        require(address(this).balance == REQUIRED_AMOUNT, \"Must send exactly 0.0005 ether\");\r\n\r\n        // Trigger self-destruct. The remaining balance is sent to the target address.\r\n        // The contract code is removed from the blockchain (as expected by the assignment).\r\n        selfdestruct(etherVaultAddress);\r\n    }\r\n\r\n    /**\r\n     * @dev Optional: A function to check the contract's current balance.\r\n     */\r\n    function getBalance() external view returns (uint256) {\r\n        return address(this).balance;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/SelfDestructSender.sol": {
				"SelfDestructSender": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_etherVaultAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "REQUIRED_AMOUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "triggerSelfDestruct",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "A simple contract to receive Ether and then self-destruct, sending its balance to a target address. Used for the EtherVault assignment self-destruct challenge.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Constructor sets the target EtherVault address.",
								"params": {
									"_etherVaultAddress": "The address of the deployed EtherVault contract."
								}
							},
							"getBalance()": {
								"details": "Optional: A function to check the contract's current balance."
							},
							"triggerSelfDestruct()": {
								"details": "Triggers the self-destruct mechanism. This sends the contract's entire balance to the etherVaultAddress and removes the contract code from the blockchain (in pre-EIP-6780 behavior). Includes the specific require check required by the assignment. NOTE: 'selfdestruct' is deprecated and its behavior changed with EIP-6780 (Cancun hard fork). For new contracts deployed post-Cancun, it might not fully remove contract code/storage unless created in the same transaction. However, this assignment specifically requires using 'selfdestruct' with a particular error message, indicating it's testing understanding of this concept as relevant to the challenge environment. Therefore, we use 'selfdestruct' here as required by the assignment instructions."
							}
						},
						"title": "SelfDestructSender",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SelfDestructSender.sol\":324:2945  contract SelfDestructSender {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/SelfDestructSender.sol\":792:987  constructor(address payable _etherVaultAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/SelfDestructSender.sol\":889:890  0 */\n  0x00\n    /* \"contracts/SelfDestructSender.sol\":859:891  _etherVaultAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/SelfDestructSender.sol\":859:877  _etherVaultAddress */\n  dup2\n    /* \"contracts/SelfDestructSender.sol\":859:891  _etherVaultAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/SelfDestructSender.sol\":851:930  require(_etherVaultAddress != address(0), \"EtherVault address cannot be zero.\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"contracts/SelfDestructSender.sol\":961:979  _etherVaultAddress */\n  dup1\n    /* \"contracts/SelfDestructSender.sol\":941:979  etherVaultAddress = _etherVaultAddress */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/SelfDestructSender.sol\":792:987  constructor(address payable _etherVaultAddress) {... */\n  pop\n    /* \"contracts/SelfDestructSender.sol\":324:2945  contract SelfDestructSender {... */\n  jump(tag_9)\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_13:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:570   */\ntag_14:\n    /* \"#utility.yul\":511:518   */\n  0x00\n    /* \"#utility.yul\":540:564   */\n  tag_26\n    /* \"#utility.yul\":558:563   */\n  dup3\n    /* \"#utility.yul\":540:564   */\n  tag_13\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":529:564   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:570   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":576:714   */\ntag_15:\n    /* \"#utility.yul\":657:689   */\n  tag_28\n    /* \"#utility.yul\":683:688   */\n  dup2\n    /* \"#utility.yul\":657:689   */\n  tag_14\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":650:655   */\n  dup2\n    /* \"#utility.yul\":647:690   */\n  eq\n    /* \"#utility.yul\":637:708   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":704:705   */\n  0x00\n    /* \"#utility.yul\":701:702   */\n  0x00\n    /* \"#utility.yul\":694:706   */\n  revert\n    /* \"#utility.yul\":637:708   */\ntag_29:\n    /* \"#utility.yul\":576:714   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":720:879   */\ntag_16:\n    /* \"#utility.yul\":785:790   */\n  0x00\n    /* \"#utility.yul\":816:822   */\n  dup2\n    /* \"#utility.yul\":810:823   */\n  mload\n    /* \"#utility.yul\":801:823   */\n  swap1\n  pop\n    /* \"#utility.yul\":832:873   */\n  tag_31\n    /* \"#utility.yul\":867:872   */\n  dup2\n    /* \"#utility.yul\":832:873   */\n  tag_15\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":720:879   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":885:1252   */\ntag_3:\n    /* \"#utility.yul\":963:969   */\n  0x00\n    /* \"#utility.yul\":1012:1014   */\n  0x20\n    /* \"#utility.yul\":1000:1009   */\n  dup3\n    /* \"#utility.yul\":991:998   */\n  dup5\n    /* \"#utility.yul\":987:1010   */\n  sub\n    /* \"#utility.yul\":983:1015   */\n  slt\n    /* \"#utility.yul\":980:1099   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1018:1097   */\n  tag_34\n  tag_11\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":980:1099   */\ntag_33:\n    /* \"#utility.yul\":1138:1139   */\n  0x00\n    /* \"#utility.yul\":1163:1235   */\n  tag_35\n    /* \"#utility.yul\":1227:1234   */\n  dup5\n    /* \"#utility.yul\":1218:1224   */\n  dup3\n    /* \"#utility.yul\":1207:1216   */\n  dup6\n    /* \"#utility.yul\":1203:1225   */\n  add\n    /* \"#utility.yul\":1163:1235   */\n  tag_16\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1153:1235   */\n  swap2\n  pop\n    /* \"#utility.yul\":1109:1245   */\n  pop\n    /* \"#utility.yul\":885:1252   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1258:1427   */\ntag_17:\n    /* \"#utility.yul\":1342:1353   */\n  0x00\n    /* \"#utility.yul\":1376:1382   */\n  dup3\n    /* \"#utility.yul\":1371:1374   */\n  dup3\n    /* \"#utility.yul\":1364:1383   */\n  mstore\n    /* \"#utility.yul\":1416:1420   */\n  0x20\n    /* \"#utility.yul\":1411:1414   */\n  dup3\n    /* \"#utility.yul\":1407:1421   */\n  add\n    /* \"#utility.yul\":1392:1421   */\n  swap1\n  pop\n    /* \"#utility.yul\":1258:1427   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1433:1654   */\ntag_18:\n    /* \"#utility.yul\":1573:1607   */\n  0x45746865725661756c7420616464726573732063616e6e6f74206265207a6572\n    /* \"#utility.yul\":1569:1570   */\n  0x00\n    /* \"#utility.yul\":1561:1567   */\n  dup3\n    /* \"#utility.yul\":1557:1571   */\n  add\n    /* \"#utility.yul\":1550:1608   */\n  mstore\n    /* \"#utility.yul\":1642:1646   */\n  0x6f2e000000000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1637:1639   */\n  0x20\n    /* \"#utility.yul\":1629:1635   */\n  dup3\n    /* \"#utility.yul\":1625:1640   */\n  add\n    /* \"#utility.yul\":1618:1647   */\n  mstore\n    /* \"#utility.yul\":1433:1654   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1660:2026   */\ntag_19:\n    /* \"#utility.yul\":1802:1805   */\n  0x00\n    /* \"#utility.yul\":1823:1890   */\n  tag_39\n    /* \"#utility.yul\":1887:1889   */\n  0x22\n    /* \"#utility.yul\":1882:1885   */\n  dup4\n    /* \"#utility.yul\":1823:1890   */\n  tag_17\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1816:1890   */\n  swap2\n  pop\n    /* \"#utility.yul\":1899:1992   */\n  tag_40\n    /* \"#utility.yul\":1988:1991   */\n  dup3\n    /* \"#utility.yul\":1899:1992   */\n  tag_18\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":2017:2019   */\n  0x40\n    /* \"#utility.yul\":2012:2015   */\n  dup3\n    /* \"#utility.yul\":2008:2020   */\n  add\n    /* \"#utility.yul\":2001:2020   */\n  swap1\n  pop\n    /* \"#utility.yul\":1660:2026   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2032:2451   */\ntag_8:\n    /* \"#utility.yul\":2198:2202   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2225:2234   */\n  dup3\n    /* \"#utility.yul\":2221:2239   */\n  add\n    /* \"#utility.yul\":2213:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2285:2294   */\n  dup2\n    /* \"#utility.yul\":2279:2283   */\n  dup2\n    /* \"#utility.yul\":2275:2295   */\n  sub\n    /* \"#utility.yul\":2271:2272   */\n  0x00\n    /* \"#utility.yul\":2260:2269   */\n  dup4\n    /* \"#utility.yul\":2256:2273   */\n  add\n    /* \"#utility.yul\":2249:2296   */\n  mstore\n    /* \"#utility.yul\":2313:2444   */\n  tag_42\n    /* \"#utility.yul\":2439:2443   */\n  dup2\n    /* \"#utility.yul\":2313:2444   */\n  tag_19\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":2305:2444   */\n  swap1\n  pop\n    /* \"#utility.yul\":2032:2451   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/SelfDestructSender.sol\":324:2945  contract SelfDestructSender {... */\ntag_9:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x13600b294191fc92924bb3ce4b969c1e7e2bab8f4c93c3fc6d0a51733df3c060\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/SelfDestructSender.sol\":324:2945  contract SelfDestructSender {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12065fe0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1b3d34bc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x87e69625\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/SelfDestructSender.sol\":2841:2942  function getBalance() external view returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      revert(0x00, 0x00)\n    tag_8:\n      pop\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SelfDestructSender.sol\":2211:2740  function triggerSelfDestruct() external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      revert(0x00, 0x00)\n    tag_13:\n      pop\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/SelfDestructSender.sol\":567:621  uint256 public constant REQUIRED_AMOUNT = 0.0005 ether */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      revert(0x00, 0x00)\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SelfDestructSender.sol\":2841:2942  function getBalance() external view returns (uint256) {... */\n    tag_10:\n        /* \"contracts/SelfDestructSender.sol\":2886:2893  uint256 */\n      0x00\n        /* \"contracts/SelfDestructSender.sol\":2913:2934  address(this).balance */\n      selfbalance\n        /* \"contracts/SelfDestructSender.sol\":2906:2934  return address(this).balance */\n      swap1\n      pop\n        /* \"contracts/SelfDestructSender.sol\":2841:2942  function getBalance() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SelfDestructSender.sol\":2211:2740  function triggerSelfDestruct() external {... */\n    tag_15:\n        /* \"contracts/SelfDestructSender.sol\":609:621  0.0005 ether */\n      0x01c6bf52634000\n        /* \"contracts/SelfDestructSender.sol\":2431:2452  address(this).balance */\n      selfbalance\n        /* \"contracts/SelfDestructSender.sol\":2431:2471  address(this).balance == REQUIRED_AMOUNT */\n      eq\n        /* \"contracts/SelfDestructSender.sol\":2423:2506  require(address(this).balance == REQUIRED_AMOUNT, \"Must send exactly 0.0005 ether\") */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_23\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"contracts/SelfDestructSender.sol\":2714:2731  etherVaultAddress */\n      immutable(\"0x13600b294191fc92924bb3ce4b969c1e7e2bab8f4c93c3fc6d0a51733df3c060\")\n        /* \"contracts/SelfDestructSender.sol\":2701:2732  selfdestruct(etherVaultAddress) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"contracts/SelfDestructSender.sol\":567:621  uint256 public constant REQUIRED_AMOUNT = 0.0005 ether */\n    tag_18:\n        /* \"contracts/SelfDestructSender.sol\":609:621  0.0005 ether */\n      0x01c6bf52634000\n        /* \"contracts/SelfDestructSender.sol\":567:621  uint256 public constant REQUIRED_AMOUNT = 0.0005 ether */\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_25:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_26:\n        /* \"#utility.yul\":177:201   */\n      tag_33\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_25\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_12:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_35\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_26\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:611   */\n    tag_27:\n        /* \"#utility.yul\":526:537   */\n      0x00\n        /* \"#utility.yul\":560:566   */\n      dup3\n        /* \"#utility.yul\":555:558   */\n      dup3\n        /* \"#utility.yul\":548:567   */\n      mstore\n        /* \"#utility.yul\":600:604   */\n      0x20\n        /* \"#utility.yul\":595:598   */\n      dup3\n        /* \"#utility.yul\":591:605   */\n      add\n        /* \"#utility.yul\":576:605   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:611   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":617:797   */\n    tag_28:\n        /* \"#utility.yul\":757:789   */\n      0x4d7573742073656e642065786163746c7920302e303030352065746865720000\n        /* \"#utility.yul\":753:754   */\n      0x00\n        /* \"#utility.yul\":745:751   */\n      dup3\n        /* \"#utility.yul\":741:755   */\n      add\n        /* \"#utility.yul\":734:790   */\n      mstore\n        /* \"#utility.yul\":617:797   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":803:1169   */\n    tag_29:\n        /* \"#utility.yul\":945:948   */\n      0x00\n        /* \"#utility.yul\":966:1033   */\n      tag_39\n        /* \"#utility.yul\":1030:1032   */\n      0x1e\n        /* \"#utility.yul\":1025:1028   */\n      dup4\n        /* \"#utility.yul\":966:1033   */\n      tag_27\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":959:1033   */\n      swap2\n      pop\n        /* \"#utility.yul\":1042:1135   */\n      tag_40\n        /* \"#utility.yul\":1131:1134   */\n      dup3\n        /* \"#utility.yul\":1042:1135   */\n      tag_28\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":1160:1162   */\n      0x20\n        /* \"#utility.yul\":1155:1158   */\n      dup3\n        /* \"#utility.yul\":1151:1163   */\n      add\n        /* \"#utility.yul\":1144:1163   */\n      swap1\n      pop\n        /* \"#utility.yul\":803:1169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1175:1594   */\n    tag_24:\n        /* \"#utility.yul\":1341:1345   */\n      0x00\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1368:1377   */\n      dup3\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"#utility.yul\":1356:1382   */\n      swap1\n      pop\n        /* \"#utility.yul\":1428:1437   */\n      dup2\n        /* \"#utility.yul\":1422:1426   */\n      dup2\n        /* \"#utility.yul\":1418:1438   */\n      sub\n        /* \"#utility.yul\":1414:1415   */\n      0x00\n        /* \"#utility.yul\":1403:1412   */\n      dup4\n        /* \"#utility.yul\":1399:1416   */\n      add\n        /* \"#utility.yul\":1392:1439   */\n      mstore\n        /* \"#utility.yul\":1456:1587   */\n      tag_42\n        /* \"#utility.yul\":1582:1586   */\n      dup2\n        /* \"#utility.yul\":1456:1587   */\n      tag_29\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":1448:1587   */\n      swap1\n      pop\n        /* \"#utility.yul\":1175:1594   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cd54a525a81d639a418cafc50a0b162810ca1a3e39e7e50983fdb953f50e2e1864736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_28": {
									"entryPoint": null,
									"id": 28,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable_fromMemory": {
									"entryPoint": 311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_90270d20ce1fcedc563bc389bb4acf211896d52bc5f1aa5c2918905b16c34973_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_90270d20ce1fcedc563bc389bb4acf211896d52bc5f1aa5c2918905b16c34973__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 217,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_90270d20ce1fcedc563bc389bb4acf211896d52bc5f1aa5c2918905b16c34973": {
									"entryPoint": 370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2454:1",
										"nodeType": "YulBlock",
										"src": "0:2454:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "519:51:1",
													"nodeType": "YulBlock",
													"src": "519:51:1",
													"statements": [
														{
															"nativeSrc": "529:35:1",
															"nodeType": "YulAssignment",
															"src": "529:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "558:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "558:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "540:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "540:17:1"
																},
																"nativeSrc": "540:24:1",
																"nodeType": "YulFunctionCall",
																"src": "540:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "529:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "529:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "466:104:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "501:5:1",
														"nodeType": "YulTypedName",
														"src": "501:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "511:7:1",
														"nodeType": "YulTypedName",
														"src": "511:7:1",
														"type": ""
													}
												],
												"src": "466:104:1"
											},
											{
												"body": {
													"nativeSrc": "627:87:1",
													"nodeType": "YulBlock",
													"src": "627:87:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "692:16:1",
																"nodeType": "YulBlock",
																"src": "692:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "701:1:1",
																					"nodeType": "YulLiteral",
																					"src": "701:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "704:1:1",
																					"nodeType": "YulLiteral",
																					"src": "704:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "694:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "694:6:1"
																			},
																			"nativeSrc": "694:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "694:12:1"
																		},
																		"nativeSrc": "694:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "694:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "650:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "650:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "683:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "683:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "657:25:1",
																					"nodeType": "YulIdentifier",
																					"src": "657:25:1"
																				},
																				"nativeSrc": "657:32:1",
																				"nodeType": "YulFunctionCall",
																				"src": "657:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "647:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "647:2:1"
																		},
																		"nativeSrc": "647:43:1",
																		"nodeType": "YulFunctionCall",
																		"src": "647:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "640:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "640:6:1"
																},
																"nativeSrc": "640:51:1",
																"nodeType": "YulFunctionCall",
																"src": "640:51:1"
															},
															"nativeSrc": "637:71:1",
															"nodeType": "YulIf",
															"src": "637:71:1"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "576:138:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "620:5:1",
														"nodeType": "YulTypedName",
														"src": "620:5:1",
														"type": ""
													}
												],
												"src": "576:138:1"
											},
											{
												"body": {
													"nativeSrc": "791:88:1",
													"nodeType": "YulBlock",
													"src": "791:88:1",
													"statements": [
														{
															"nativeSrc": "801:22:1",
															"nodeType": "YulAssignment",
															"src": "801:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "816:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "816:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "810:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "810:5:1"
																},
																"nativeSrc": "810:13:1",
																"nodeType": "YulFunctionCall",
																"src": "810:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "801:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "801:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "867:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "867:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "832:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "832:34:1"
																},
																"nativeSrc": "832:41:1",
																"nodeType": "YulFunctionCall",
																"src": "832:41:1"
															},
															"nativeSrc": "832:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "832:41:1"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nativeSrc": "720:159:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "769:6:1",
														"nodeType": "YulTypedName",
														"src": "769:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "777:3:1",
														"nodeType": "YulTypedName",
														"src": "777:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "785:5:1",
														"nodeType": "YulTypedName",
														"src": "785:5:1",
														"type": ""
													}
												],
												"src": "720:159:1"
											},
											{
												"body": {
													"nativeSrc": "970:282:1",
													"nodeType": "YulBlock",
													"src": "970:282:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1016:83:1",
																"nodeType": "YulBlock",
																"src": "1016:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1018:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1018:77:1"
																			},
																			"nativeSrc": "1018:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1018:79:1"
																		},
																		"nativeSrc": "1018:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1018:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "991:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "991:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1000:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1000:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "987:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "987:3:1"
																		},
																		"nativeSrc": "987:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "987:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1012:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1012:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "983:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "983:3:1"
																},
																"nativeSrc": "983:32:1",
																"nodeType": "YulFunctionCall",
																"src": "983:32:1"
															},
															"nativeSrc": "980:119:1",
															"nodeType": "YulIf",
															"src": "980:119:1"
														},
														{
															"nativeSrc": "1109:136:1",
															"nodeType": "YulBlock",
															"src": "1109:136:1",
															"statements": [
																{
																	"nativeSrc": "1124:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1124:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1138:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1138:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1128:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1128:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1153:82:1",
																	"nodeType": "YulAssignment",
																	"src": "1153:82:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1207:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1207:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1218:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1218:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1203:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1203:3:1"
																				},
																				"nativeSrc": "1203:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1203:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1227:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1227:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nativeSrc": "1163:39:1",
																			"nodeType": "YulIdentifier",
																			"src": "1163:39:1"
																		},
																		"nativeSrc": "1163:72:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:72:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1153:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1153:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable_fromMemory",
												"nativeSrc": "885:367:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "940:9:1",
														"nodeType": "YulTypedName",
														"src": "940:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "951:7:1",
														"nodeType": "YulTypedName",
														"src": "951:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "963:6:1",
														"nodeType": "YulTypedName",
														"src": "963:6:1",
														"type": ""
													}
												],
												"src": "885:367:1"
											},
											{
												"body": {
													"nativeSrc": "1354:73:1",
													"nodeType": "YulBlock",
													"src": "1354:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1371:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1371:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1376:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1376:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1364:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1364:6:1"
																},
																"nativeSrc": "1364:19:1",
																"nodeType": "YulFunctionCall",
																"src": "1364:19:1"
															},
															"nativeSrc": "1364:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "1364:19:1"
														},
														{
															"nativeSrc": "1392:29:1",
															"nodeType": "YulAssignment",
															"src": "1392:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1411:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1411:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1416:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1416:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1407:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1407:3:1"
																},
																"nativeSrc": "1407:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1407:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1392:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "1392:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1258:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1326:3:1",
														"nodeType": "YulTypedName",
														"src": "1326:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1331:6:1",
														"nodeType": "YulTypedName",
														"src": "1331:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1342:11:1",
														"nodeType": "YulTypedName",
														"src": "1342:11:1",
														"type": ""
													}
												],
												"src": "1258:169:1"
											},
											{
												"body": {
													"nativeSrc": "1539:115:1",
													"nodeType": "YulBlock",
													"src": "1539:115:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1561:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1561:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1569:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1569:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1557:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1557:3:1"
																		},
																		"nativeSrc": "1557:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1557:14:1"
																	},
																	{
																		"hexValue": "45746865725661756c7420616464726573732063616e6e6f74206265207a6572",
																		"kind": "string",
																		"nativeSrc": "1573:34:1",
																		"nodeType": "YulLiteral",
																		"src": "1573:34:1",
																		"type": "",
																		"value": "EtherVault address cannot be zer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1550:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1550:6:1"
																},
																"nativeSrc": "1550:58:1",
																"nodeType": "YulFunctionCall",
																"src": "1550:58:1"
															},
															"nativeSrc": "1550:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "1550:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1629:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1629:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1637:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1637:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1625:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1625:3:1"
																		},
																		"nativeSrc": "1625:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1625:15:1"
																	},
																	{
																		"hexValue": "6f2e",
																		"kind": "string",
																		"nativeSrc": "1642:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1642:4:1",
																		"type": "",
																		"value": "o."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1618:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1618:6:1"
																},
																"nativeSrc": "1618:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1618:29:1"
															},
															"nativeSrc": "1618:29:1",
															"nodeType": "YulExpressionStatement",
															"src": "1618:29:1"
														}
													]
												},
												"name": "store_literal_in_memory_90270d20ce1fcedc563bc389bb4acf211896d52bc5f1aa5c2918905b16c34973",
												"nativeSrc": "1433:221:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1531:6:1",
														"nodeType": "YulTypedName",
														"src": "1531:6:1",
														"type": ""
													}
												],
												"src": "1433:221:1"
											},
											{
												"body": {
													"nativeSrc": "1806:220:1",
													"nodeType": "YulBlock",
													"src": "1806:220:1",
													"statements": [
														{
															"nativeSrc": "1816:74:1",
															"nodeType": "YulAssignment",
															"src": "1816:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1882:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1887:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1887:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1823:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "1823:58:1"
																},
																"nativeSrc": "1823:67:1",
																"nodeType": "YulFunctionCall",
																"src": "1823:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1816:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1816:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1988:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1988:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_90270d20ce1fcedc563bc389bb4acf211896d52bc5f1aa5c2918905b16c34973",
																	"nativeSrc": "1899:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "1899:88:1"
																},
																"nativeSrc": "1899:93:1",
																"nodeType": "YulFunctionCall",
																"src": "1899:93:1"
															},
															"nativeSrc": "1899:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "1899:93:1"
														},
														{
															"nativeSrc": "2001:19:1",
															"nodeType": "YulAssignment",
															"src": "2001:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2012:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2012:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2017:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2017:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2008:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2008:3:1"
																},
																"nativeSrc": "2008:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2008:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2001:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2001:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_90270d20ce1fcedc563bc389bb4acf211896d52bc5f1aa5c2918905b16c34973_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1660:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1794:3:1",
														"nodeType": "YulTypedName",
														"src": "1794:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1802:3:1",
														"nodeType": "YulTypedName",
														"src": "1802:3:1",
														"type": ""
													}
												],
												"src": "1660:366:1"
											},
											{
												"body": {
													"nativeSrc": "2203:248:1",
													"nodeType": "YulBlock",
													"src": "2203:248:1",
													"statements": [
														{
															"nativeSrc": "2213:26:1",
															"nodeType": "YulAssignment",
															"src": "2213:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2225:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2225:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2221:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2221:3:1"
																},
																"nativeSrc": "2221:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2221:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2213:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2213:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2260:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2260:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2271:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2271:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2256:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2256:3:1"
																		},
																		"nativeSrc": "2256:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2256:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2279:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2279:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2285:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2285:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2275:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2275:3:1"
																		},
																		"nativeSrc": "2275:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2275:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2249:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:1"
																},
																"nativeSrc": "2249:47:1",
																"nodeType": "YulFunctionCall",
																"src": "2249:47:1"
															},
															"nativeSrc": "2249:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "2249:47:1"
														},
														{
															"nativeSrc": "2305:139:1",
															"nodeType": "YulAssignment",
															"src": "2305:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2439:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2439:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_90270d20ce1fcedc563bc389bb4acf211896d52bc5f1aa5c2918905b16c34973_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2313:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "2313:124:1"
																},
																"nativeSrc": "2313:131:1",
																"nodeType": "YulFunctionCall",
																"src": "2313:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2305:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2305:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_90270d20ce1fcedc563bc389bb4acf211896d52bc5f1aa5c2918905b16c34973__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2032:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2183:9:1",
														"nodeType": "YulTypedName",
														"src": "2183:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2198:4:1",
														"nodeType": "YulTypedName",
														"src": "2198:4:1",
														"type": ""
													}
												],
												"src": "2032:419:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_90270d20ce1fcedc563bc389bb4acf211896d52bc5f1aa5c2918905b16c34973(memPtr) {\n\n        mstore(add(memPtr, 0), \"EtherVault address cannot be zer\")\n\n        mstore(add(memPtr, 32), \"o.\")\n\n    }\n\n    function abi_encode_t_stringliteral_90270d20ce1fcedc563bc389bb4acf211896d52bc5f1aa5c2918905b16c34973_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_90270d20ce1fcedc563bc389bb4acf211896d52bc5f1aa5c2918905b16c34973(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_90270d20ce1fcedc563bc389bb4acf211896d52bc5f1aa5c2918905b16c34973__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_90270d20ce1fcedc563bc389bb4acf211896d52bc5f1aa5c2918905b16c34973_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f5ffd5b5060405161043638038061043683398181016040528101906100319190610137565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361009f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610096906101e2565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050610200565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610106826100dd565b9050919050565b610116816100fc565b8114610120575f5ffd5b50565b5f815190506101318161010d565b92915050565b5f6020828403121561014c5761014b6100d9565b5b5f61015984828501610123565b91505092915050565b5f82825260208201905092915050565b7f45746865725661756c7420616464726573732063616e6e6f74206265207a65725f8201527f6f2e000000000000000000000000000000000000000000000000000000000000602082015250565b5f6101cc602283610162565b91506101d782610172565b604082019050919050565b5f6020820190508181035f8301526101f9816101c0565b9050919050565b60805161021f6102175f395f60fe015261021f5ff3fe608060405260043610610037575f3560e01c806312065fe0146100425780631b3d34bc1461006c57806387e69625146100825761003e565b3661003e57005b5f5ffd5b34801561004d575f5ffd5b506100566100ac565b6040516100639190610158565b60405180910390f35b348015610077575f5ffd5b506100806100b3565b005b34801561008d575f5ffd5b50610096610135565b6040516100a39190610158565b60405180910390f35b5f47905090565b6601c6bf5263400047146100fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f3906101cb565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16ff5b6601c6bf5263400081565b5f819050919050565b61015281610140565b82525050565b5f60208201905061016b5f830184610149565b92915050565b5f82825260208201905092915050565b7f4d7573742073656e642065786163746c7920302e3030303520657468657200005f82015250565b5f6101b5601e83610171565b91506101c082610181565b602082019050919050565b5f6020820190508181035f8301526101e2816101a9565b905091905056fea2646970667358221220cd54a525a81d639a418cafc50a0b162810ca1a3e39e7e50983fdb953f50e2e1864736f6c634300081e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x436 CODESIZE SUB DUP1 PUSH2 0x436 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x137 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96 SWAP1 PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH2 0x200 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x106 DUP3 PUSH2 0xDD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x116 DUP2 PUSH2 0xFC JUMP JUMPDEST DUP2 EQ PUSH2 0x120 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x131 DUP2 PUSH2 0x10D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C JUMPI PUSH2 0x14B PUSH2 0xD9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x159 DUP5 DUP3 DUP6 ADD PUSH2 0x123 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45746865725661756C7420616464726573732063616E6E6F74206265207A6572 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F2E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC PUSH1 0x22 DUP4 PUSH2 0x162 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D7 DUP3 PUSH2 0x172 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F9 DUP2 PUSH2 0x1C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x21F PUSH2 0x217 PUSH0 CODECOPY PUSH0 PUSH1 0xFE ADD MSTORE PUSH2 0x21F PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x37 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0x1B3D34BC EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x87E69625 EQ PUSH2 0x82 JUMPI PUSH2 0x3E JUMP JUMPDEST CALLDATASIZE PUSH2 0x3E JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x56 PUSH2 0xAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x80 PUSH2 0xB3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x96 PUSH2 0x135 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA3 SWAP2 SWAP1 PUSH2 0x158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH7 0x1C6BF52634000 SELFBALANCE EQ PUSH2 0xFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3 SWAP1 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH7 0x1C6BF52634000 DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x152 DUP2 PUSH2 0x140 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16B PUSH0 DUP4 ADD DUP5 PUSH2 0x149 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742073656E642065786163746C7920302E303030352065746865720000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B5 PUSH1 0x1E DUP4 PUSH2 0x171 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C0 DUP3 PUSH2 0x181 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E2 DUP2 PUSH2 0x1A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD SLOAD 0xA5 0x25 0xA8 SAR PUSH4 0x9A418CAF 0xC5 EXP SIGNEXTEND AND 0x28 LT 0xCA BYTE RETURNDATACOPY CODECOPY SWAPN 0xE5 MULMOD DUP4 REVERT 0xB9 MSTORE8 CREATE2 0xE 0x2E XOR PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "324:2621:0:-:0;;;792:195;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;889:1;859:32;;:18;:32;;;851:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;961:18;941:38;;;;;;;;;;792:195;324:2621;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:104::-;511:7;540:24;558:5;540:24;:::i;:::-;529:35;;466:104;;;:::o;576:138::-;657:32;683:5;657:32;:::i;:::-;650:5;647:43;637:71;;704:1;701;694:12;637:71;576:138;:::o;720:159::-;785:5;816:6;810:13;801:22;;832:41;867:5;832:41;:::i;:::-;720:159;;;;:::o;885:367::-;963:6;1012:2;1000:9;991:7;987:23;983:32;980:119;;;1018:79;;:::i;:::-;980:119;1138:1;1163:72;1227:7;1218:6;1207:9;1203:22;1163:72;:::i;:::-;1153:82;;1109:136;885:367;;;;:::o;1258:169::-;1342:11;1376:6;1371:3;1364:19;1416:4;1411:3;1407:14;1392:29;;1258:169;;;;:::o;1433:221::-;1573:34;1569:1;1561:6;1557:14;1550:58;1642:4;1637:2;1629:6;1625:15;1618:29;1433:221;:::o;1660:366::-;1802:3;1823:67;1887:2;1882:3;1823:67;:::i;:::-;1816:74;;1899:93;1988:3;1899:93;:::i;:::-;2017:2;2012:3;2008:12;2001:19;;1660:366;;;:::o;2032:419::-;2198:4;2236:2;2225:9;2221:18;2213:26;;2285:9;2279:4;2275:20;2271:1;2260:9;2256:17;2249:47;2313:131;2439:4;2313:131;:::i;:::-;2305:139;;2032:419;;;:::o;324:2621:0:-;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@REQUIRED_AMOUNT_7": {
									"entryPoint": 309,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_33": {
									"entryPoint": null,
									"id": 33,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_66": {
									"entryPoint": 172,
									"id": 66,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@triggerSelfDestruct_53": {
									"entryPoint": 179,
									"id": 53,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa": {
									"entryPoint": 385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1597:1",
										"nodeType": "YulBlock",
										"src": "0:1597:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:1",
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nativeSrc": "62:16:1",
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:1",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nativeSrc": "155:53:1",
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nativeSrc": "177:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nativeSrc": "165:37:1",
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nativeSrc": "165:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:1",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:1",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nativeSrc": "312:124:1",
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nativeSrc": "322:26:1",
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:1",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nativeSrc": "330:18:1",
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:1",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nativeSrc": "411:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nativeSrc": "358:71:1",
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nativeSrc": "358:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:1",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:1",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:1",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nativeSrc": "538:73:1",
													"nodeType": "YulBlock",
													"src": "538:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "555:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "555:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "560:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "560:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "548:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "548:6:1"
																},
																"nativeSrc": "548:19:1",
																"nodeType": "YulFunctionCall",
																"src": "548:19:1"
															},
															"nativeSrc": "548:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "548:19:1"
														},
														{
															"nativeSrc": "576:29:1",
															"nodeType": "YulAssignment",
															"src": "576:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "595:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "595:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "600:4:1",
																		"nodeType": "YulLiteral",
																		"src": "600:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "591:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "591:3:1"
																},
																"nativeSrc": "591:14:1",
																"nodeType": "YulFunctionCall",
																"src": "591:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "576:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "576:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "442:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "510:3:1",
														"nodeType": "YulTypedName",
														"src": "510:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "515:6:1",
														"nodeType": "YulTypedName",
														"src": "515:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "526:11:1",
														"nodeType": "YulTypedName",
														"src": "526:11:1",
														"type": ""
													}
												],
												"src": "442:169:1"
											},
											{
												"body": {
													"nativeSrc": "723:74:1",
													"nodeType": "YulBlock",
													"src": "723:74:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "745:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "745:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "753:1:1",
																				"nodeType": "YulLiteral",
																				"src": "753:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "741:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "741:3:1"
																		},
																		"nativeSrc": "741:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "741:14:1"
																	},
																	{
																		"hexValue": "4d7573742073656e642065786163746c7920302e30303035206574686572",
																		"kind": "string",
																		"nativeSrc": "757:32:1",
																		"nodeType": "YulLiteral",
																		"src": "757:32:1",
																		"type": "",
																		"value": "Must send exactly 0.0005 ether"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "734:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "734:6:1"
																},
																"nativeSrc": "734:56:1",
																"nodeType": "YulFunctionCall",
																"src": "734:56:1"
															},
															"nativeSrc": "734:56:1",
															"nodeType": "YulExpressionStatement",
															"src": "734:56:1"
														}
													]
												},
												"name": "store_literal_in_memory_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa",
												"nativeSrc": "617:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "715:6:1",
														"nodeType": "YulTypedName",
														"src": "715:6:1",
														"type": ""
													}
												],
												"src": "617:180:1"
											},
											{
												"body": {
													"nativeSrc": "949:220:1",
													"nodeType": "YulBlock",
													"src": "949:220:1",
													"statements": [
														{
															"nativeSrc": "959:74:1",
															"nodeType": "YulAssignment",
															"src": "959:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1025:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1025:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1030:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1030:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "966:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "966:58:1"
																},
																"nativeSrc": "966:67:1",
																"nodeType": "YulFunctionCall",
																"src": "966:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "959:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "959:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1131:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1131:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa",
																	"nativeSrc": "1042:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "1042:88:1"
																},
																"nativeSrc": "1042:93:1",
																"nodeType": "YulFunctionCall",
																"src": "1042:93:1"
															},
															"nativeSrc": "1042:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "1042:93:1"
														},
														{
															"nativeSrc": "1144:19:1",
															"nodeType": "YulAssignment",
															"src": "1144:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1155:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1155:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1160:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1160:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1151:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1151:3:1"
																},
																"nativeSrc": "1151:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1151:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1144:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1144:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "803:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "937:3:1",
														"nodeType": "YulTypedName",
														"src": "937:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "945:3:1",
														"nodeType": "YulTypedName",
														"src": "945:3:1",
														"type": ""
													}
												],
												"src": "803:366:1"
											},
											{
												"body": {
													"nativeSrc": "1346:248:1",
													"nodeType": "YulBlock",
													"src": "1346:248:1",
													"statements": [
														{
															"nativeSrc": "1356:26:1",
															"nodeType": "YulAssignment",
															"src": "1356:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1368:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1379:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1364:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:1"
																},
																"nativeSrc": "1364:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1364:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1356:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1403:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1403:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1414:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1414:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1399:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1399:3:1"
																		},
																		"nativeSrc": "1399:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1399:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1422:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1422:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1418:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1418:3:1"
																		},
																		"nativeSrc": "1418:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1418:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1392:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1392:6:1"
																},
																"nativeSrc": "1392:47:1",
																"nodeType": "YulFunctionCall",
																"src": "1392:47:1"
															},
															"nativeSrc": "1392:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "1392:47:1"
														},
														{
															"nativeSrc": "1448:139:1",
															"nodeType": "YulAssignment",
															"src": "1448:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1582:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1582:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1456:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "1456:124:1"
																},
																"nativeSrc": "1456:131:1",
																"nodeType": "YulFunctionCall",
																"src": "1456:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1448:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1448:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1175:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1326:9:1",
														"nodeType": "YulTypedName",
														"src": "1326:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1341:4:1",
														"nodeType": "YulTypedName",
														"src": "1341:4:1",
														"type": ""
													}
												],
												"src": "1175:419:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must send exactly 0.0005 ether\")\n\n    }\n\n    function abi_encode_t_stringliteral_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"4": [
									{
										"length": 32,
										"start": 254
									}
								]
							},
							"linkReferences": {},
							"object": "608060405260043610610037575f3560e01c806312065fe0146100425780631b3d34bc1461006c57806387e69625146100825761003e565b3661003e57005b5f5ffd5b34801561004d575f5ffd5b506100566100ac565b6040516100639190610158565b60405180910390f35b348015610077575f5ffd5b506100806100b3565b005b34801561008d575f5ffd5b50610096610135565b6040516100a39190610158565b60405180910390f35b5f47905090565b6601c6bf5263400047146100fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f3906101cb565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16ff5b6601c6bf5263400081565b5f819050919050565b61015281610140565b82525050565b5f60208201905061016b5f830184610149565b92915050565b5f82825260208201905092915050565b7f4d7573742073656e642065786163746c7920302e3030303520657468657200005f82015250565b5f6101b5601e83610171565b91506101c082610181565b602082019050919050565b5f6020820190508181035f8301526101e2816101a9565b905091905056fea2646970667358221220cd54a525a81d639a418cafc50a0b162810ca1a3e39e7e50983fdb953f50e2e1864736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x37 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0x1B3D34BC EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x87E69625 EQ PUSH2 0x82 JUMPI PUSH2 0x3E JUMP JUMPDEST CALLDATASIZE PUSH2 0x3E JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x56 PUSH2 0xAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x80 PUSH2 0xB3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x96 PUSH2 0x135 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA3 SWAP2 SWAP1 PUSH2 0x158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH7 0x1C6BF52634000 SELFBALANCE EQ PUSH2 0xFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3 SWAP1 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH7 0x1C6BF52634000 DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x152 DUP2 PUSH2 0x140 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16B PUSH0 DUP4 ADD DUP5 PUSH2 0x149 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742073656E642065786163746C7920302E303030352065746865720000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B5 PUSH1 0x1E DUP4 PUSH2 0x171 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C0 DUP3 PUSH2 0x181 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E2 DUP2 PUSH2 0x1A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD SLOAD 0xA5 0x25 0xA8 SAR PUSH4 0x9A418CAF 0xC5 EXP SIGNEXTEND AND 0x28 LT 0xCA BYTE RETURNDATACOPY CODECOPY SWAPN 0xE5 MULMOD DUP4 REVERT 0xB9 MSTORE8 CREATE2 0xE 0x2E XOR PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "324:2621:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2841:101;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2211:529;;;;;;;;;;;;;:::i;:::-;;567:54;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2841:101;2886:7;2913:21;2906:28;;2841:101;:::o;2211:529::-;609:12;2431:21;:40;2423:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;2714:17;2701:31;;;567:54;609:12;567:54;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:169::-;526:11;560:6;555:3;548:19;600:4;595:3;591:14;576:29;;442:169;;;;:::o;617:180::-;757:32;753:1;745:6;741:14;734:56;617:180;:::o;803:366::-;945:3;966:67;1030:2;1025:3;966:67;:::i;:::-;959:74;;1042:93;1131:3;1042:93;:::i;:::-;1160:2;1155:3;1151:12;1144:19;;803:366;;;:::o;1175:419::-;1341:4;1379:2;1368:9;1364:18;1356:26;;1428:9;1422:4;1418:20;1414:1;1403:9;1399:17;1392:47;1456:131;1582:4;1456:131;:::i;:::-;1448:139;;1175:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "108600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"REQUIRED_AMOUNT()": "347",
								"getBalance()": "312",
								"triggerSelfDestruct()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 324,
									"end": 2945,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 324,
									"end": 2945,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 2945,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 792,
									"end": 987,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 792,
									"end": 987,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 792,
									"end": 987,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 792,
									"end": 987,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 792,
									"end": 987,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 792,
									"end": 987,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 792,
									"end": 987,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 792,
									"end": 987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 792,
									"end": 987,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 889,
									"end": 890,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 859,
									"end": 891,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 859,
									"end": 891,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 859,
									"end": 877,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 859,
									"end": 891,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 859,
									"end": 891,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 859,
									"end": 891,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 851,
									"end": 930,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 851,
									"end": 930,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 851,
									"end": 930,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 851,
									"end": 930,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 851,
									"end": 930,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 851,
									"end": 930,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 851,
									"end": 930,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 851,
									"end": 930,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 851,
									"end": 930,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 851,
									"end": 930,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 851,
									"end": 930,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 851,
									"end": 930,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 851,
									"end": 930,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 851,
									"end": 930,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 851,
									"end": 930,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 851,
									"end": 930,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 851,
									"end": 930,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 851,
									"end": 930,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 851,
									"end": 930,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 851,
									"end": 930,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 851,
									"end": 930,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 851,
									"end": 930,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 851,
									"end": 930,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 851,
									"end": 930,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 961,
									"end": 979,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 941,
									"end": 979,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 941,
									"end": 979,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 941,
									"end": 979,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 941,
									"end": 979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 941,
									"end": 979,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 941,
									"end": 979,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 941,
									"end": 979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 941,
									"end": 979,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 941,
									"end": 979,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 941,
									"end": 979,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 792,
									"end": 987,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 324,
									"end": 2945,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 324,
									"end": 2945,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 570,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 466,
									"end": 570,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 511,
									"end": 518,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 540,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 558,
									"end": 563,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 540,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 540,
									"end": 564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 540,
									"end": 564,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 540,
									"end": 564,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 529,
									"end": 564,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 529,
									"end": 564,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 570,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 570,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 570,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 570,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 576,
									"end": 714,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 576,
									"end": 714,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 657,
									"end": 689,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 683,
									"end": 688,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 657,
									"end": 689,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 657,
									"end": 689,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 689,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 657,
									"end": 689,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 650,
									"end": 655,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 647,
									"end": 690,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 637,
									"end": 708,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 637,
									"end": 708,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 704,
									"end": 705,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 702,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 694,
									"end": 706,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 637,
									"end": 708,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 637,
									"end": 708,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 576,
									"end": 714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 576,
									"end": 714,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 720,
									"end": 879,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 720,
									"end": 879,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 785,
									"end": 790,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 816,
									"end": 822,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 810,
									"end": 823,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 801,
									"end": 823,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 801,
									"end": 823,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 832,
									"end": 873,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 867,
									"end": 872,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 832,
									"end": 873,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 832,
									"end": 873,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 832,
									"end": 873,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 832,
									"end": 873,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 720,
									"end": 879,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 720,
									"end": 879,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 720,
									"end": 879,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 720,
									"end": 879,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 720,
									"end": 879,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 885,
									"end": 1252,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 885,
									"end": 1252,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 963,
									"end": 969,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1012,
									"end": 1014,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 991,
									"end": 998,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1010,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 983,
									"end": 1015,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 980,
									"end": 1099,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 980,
									"end": 1099,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 980,
									"end": 1099,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1018,
									"end": 1097,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1018,
									"end": 1097,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1018,
									"end": 1097,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1018,
									"end": 1097,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1018,
									"end": 1097,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 980,
									"end": 1099,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 980,
									"end": 1099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1138,
									"end": 1139,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1163,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1227,
									"end": 1234,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1218,
									"end": 1224,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1207,
									"end": 1216,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1203,
									"end": 1225,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1163,
									"end": 1235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1163,
									"end": 1235,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1163,
									"end": 1235,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1153,
									"end": 1235,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1153,
									"end": 1235,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1109,
									"end": 1245,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 885,
									"end": 1252,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 885,
									"end": 1252,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 885,
									"end": 1252,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 885,
									"end": 1252,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 885,
									"end": 1252,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1258,
									"end": 1427,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1258,
									"end": 1427,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1376,
									"end": 1382,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1371,
									"end": 1374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1364,
									"end": 1383,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1416,
									"end": 1420,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1411,
									"end": 1414,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1407,
									"end": 1421,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1392,
									"end": 1421,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1392,
									"end": 1421,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1258,
									"end": 1427,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1258,
									"end": 1427,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1258,
									"end": 1427,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1258,
									"end": 1427,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1258,
									"end": 1427,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1433,
									"end": 1654,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1433,
									"end": 1654,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1573,
									"end": 1607,
									"name": "PUSH",
									"source": 1,
									"value": "45746865725661756C7420616464726573732063616E6E6F74206265207A6572"
								},
								{
									"begin": 1569,
									"end": 1570,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1561,
									"end": 1567,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1557,
									"end": 1571,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1608,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1642,
									"end": 1646,
									"name": "PUSH",
									"source": 1,
									"value": "6F2E000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1637,
									"end": 1639,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1629,
									"end": 1635,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1625,
									"end": 1640,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1618,
									"end": 1647,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1433,
									"end": 1654,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1433,
									"end": 1654,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1660,
									"end": 2026,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1660,
									"end": 2026,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1802,
									"end": 1805,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1823,
									"end": 1890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1887,
									"end": 1889,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1882,
									"end": 1885,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1823,
									"end": 1890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1823,
									"end": 1890,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1823,
									"end": 1890,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1823,
									"end": 1890,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1816,
									"end": 1890,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1816,
									"end": 1890,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1899,
									"end": 1992,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1988,
									"end": 1991,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1899,
									"end": 1992,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1899,
									"end": 1992,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1899,
									"end": 1992,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1899,
									"end": 1992,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2017,
									"end": 2019,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2012,
									"end": 2015,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2008,
									"end": 2020,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2001,
									"end": 2020,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2001,
									"end": 2020,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1660,
									"end": 2026,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1660,
									"end": 2026,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1660,
									"end": 2026,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1660,
									"end": 2026,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2032,
									"end": 2451,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2032,
									"end": 2451,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2198,
									"end": 2202,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2225,
									"end": 2234,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2239,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2239,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2239,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2285,
									"end": 2294,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2279,
									"end": 2283,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2275,
									"end": 2295,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2271,
									"end": 2272,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2260,
									"end": 2269,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2256,
									"end": 2273,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2249,
									"end": 2296,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2313,
									"end": 2444,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2313,
									"end": 2444,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 2313,
									"end": 2444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2313,
									"end": 2444,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2313,
									"end": 2444,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2305,
									"end": 2444,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2305,
									"end": 2444,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2032,
									"end": 2451,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2032,
									"end": 2451,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2032,
									"end": 2451,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2032,
									"end": 2451,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 324,
									"end": 2945,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 324,
									"end": 2945,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 324,
									"end": 2945,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 324,
									"end": 2945,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 324,
									"end": 2945,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 324,
									"end": 2945,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 324,
									"end": 2945,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 2945,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 324,
									"end": 2945,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 2945,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 324,
									"end": 2945,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 324,
									"end": 2945,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 2945,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cd54a525a81d639a418cafc50a0b162810ca1a3e39e7e50983fdb953f50e2e1864736f6c634300081e0033",
									".code": [
										{
											"begin": 324,
											"end": 2945,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "PUSH",
											"source": 0,
											"value": "12065FE0"
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "PUSH",
											"source": 0,
											"value": "1B3D34BC"
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "PUSH",
											"source": 0,
											"value": "87E69625"
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 2945,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2841,
											"end": 2942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2841,
											"end": 2942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2211,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2211,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2211,
											"end": 2740,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2211,
											"end": 2740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2211,
											"end": 2740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2211,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2211,
											"end": 2740,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2211,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2740,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2211,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2211,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2211,
											"end": 2740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2211,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2211,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2211,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2211,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2211,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2211,
											"end": 2740,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 567,
											"end": 621,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 567,
											"end": 621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 567,
											"end": 621,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 567,
											"end": 621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 567,
											"end": 621,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 567,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 567,
											"end": 621,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 567,
											"end": 621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 621,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 567,
											"end": 621,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 567,
											"end": 621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 567,
											"end": 621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 567,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 567,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 567,
											"end": 621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 567,
											"end": 621,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 567,
											"end": 621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 567,
											"end": 621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 567,
											"end": 621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 567,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 567,
											"end": 621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 567,
											"end": 621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 567,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 567,
											"end": 621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 567,
											"end": 621,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 567,
											"end": 621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 567,
											"end": 621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 567,
											"end": 621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 567,
											"end": 621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 567,
											"end": 621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 567,
											"end": 621,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 567,
											"end": 621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 567,
											"end": 621,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2886,
											"end": 2893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2934,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 2906,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2906,
											"end": 2934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2211,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2211,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 609,
											"end": 621,
											"name": "PUSH",
											"source": 0,
											"value": "1C6BF52634000"
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2471,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2423,
											"end": 2506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2423,
											"end": 2506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2506,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2423,
											"end": 2506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2506,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2423,
											"end": 2506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2423,
											"end": 2506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2423,
											"end": 2506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2506,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2423,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2423,
											"end": 2506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2506,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2506,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2506,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2423,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2701,
											"end": 2732,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2701,
											"end": 2732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2732,
											"name": "SELFDESTRUCT",
											"source": 0
										},
										{
											"begin": 567,
											"end": 621,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 567,
											"end": 621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 609,
											"end": 621,
											"name": "PUSH",
											"source": 0,
											"value": "1C6BF52634000"
										},
										{
											"begin": 567,
											"end": 621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 567,
											"end": 621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 611,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 442,
											"end": 611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 526,
											"end": 537,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 555,
											"end": 558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 548,
											"end": 567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 600,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 591,
											"end": 605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 576,
											"end": 605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 576,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 442,
											"end": 611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 442,
											"end": 611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 617,
											"end": 797,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 617,
											"end": 797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 757,
											"end": 789,
											"name": "PUSH",
											"source": 1,
											"value": "4D7573742073656E642065786163746C7920302E303030352065746865720000"
										},
										{
											"begin": 753,
											"end": 754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 741,
											"end": 755,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 734,
											"end": 790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 617,
											"end": 797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 617,
											"end": 797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 803,
											"end": 1169,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 803,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 945,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1030,
											"end": 1032,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 1025,
											"end": 1028,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 966,
											"end": 1033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 1033,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 966,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1033,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1131,
											"end": 1134,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1042,
											"end": 1135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1135,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1162,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1158,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 803,
											"end": 1169,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 803,
											"end": 1169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 803,
											"end": 1169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 803,
											"end": 1169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1594,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1175,
											"end": 1594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1368,
											"end": 1377,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1356,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1356,
											"end": 1382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1438,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1399,
											"end": 1416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1582,
											"end": 1586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1456,
											"end": 1587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1587,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1456,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1594,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/SelfDestructSender.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"REQUIRED_AMOUNT()": "87e69625",
							"getBalance()": "12065fe0",
							"triggerSelfDestruct()": "1b3d34bc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_etherVaultAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"REQUIRED_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"triggerSelfDestruct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"A simple contract to receive Ether and then self-destruct, sending its balance to a target address. Used for the EtherVault assignment self-destruct challenge.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor sets the target EtherVault address.\",\"params\":{\"_etherVaultAddress\":\"The address of the deployed EtherVault contract.\"}},\"getBalance()\":{\"details\":\"Optional: A function to check the contract's current balance.\"},\"triggerSelfDestruct()\":{\"details\":\"Triggers the self-destruct mechanism. This sends the contract's entire balance to the etherVaultAddress and removes the contract code from the blockchain (in pre-EIP-6780 behavior). Includes the specific require check required by the assignment. NOTE: 'selfdestruct' is deprecated and its behavior changed with EIP-6780 (Cancun hard fork). For new contracts deployed post-Cancun, it might not fully remove contract code/storage unless created in the same transaction. However, this assignment specifically requires using 'selfdestruct' with a particular error message, indicating it's testing understanding of this concept as relevant to the challenge environment. Therefore, we use 'selfdestruct' here as required by the assignment instructions.\"}},\"title\":\"SelfDestructSender\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SelfDestructSender.sol\":\"SelfDestructSender\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SelfDestructSender.sol\":{\"keccak256\":\"0x0f4217d7d7b4c3a09cc34124920d9fda0b2a10108411245937f74175fc55e344\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://93359738246f8a40f32a3b6a6f3342234d52700ead1b0046cadf67f1c4657116\",\"dweb:/ipfs/QmVg8dRWfgngSCEk7yZRdoMxtzDDpRZQVjBxqsPb69KBEa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5159",
				"formattedMessage": "Warning: \"selfdestruct\" has been deprecated. Note that, starting from the Cancun hard fork, the underlying opcode no longer deletes the code and data associated with an account and only transfers its Ether to the beneficiary, unless executed in the same transaction in which the contract was created (see EIP-6780). Any use in newly deployed contracts is strongly discouraged even if the new behavior is taken into account. Future changes to the EVM might further reduce the functionality of the opcode.\n  --> contracts/SelfDestructSender.sol:55:9:\n   |\n55 |         selfdestruct(etherVaultAddress);\n   |         ^^^^^^^^^^^^\n\n",
				"message": "\"selfdestruct\" has been deprecated. Note that, starting from the Cancun hard fork, the underlying opcode no longer deletes the code and data associated with an account and only transfers its Ether to the beneficiary, unless executed in the same transaction in which the contract was created (see EIP-6780). Any use in newly deployed contracts is strongly discouraged even if the new behavior is taken into account. Future changes to the EVM might further reduce the functionality of the opcode.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2713,
					"file": "contracts/SelfDestructSender.sol",
					"start": 2701
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/SelfDestructSender.sol": {
				"ast": {
					"absolutePath": "contracts/SelfDestructSender.sol",
					"exportedSymbols": {
						"SelfDestructSender": [
							67
						]
					},
					"id": 68,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SelfDestructSender",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "111:211:0",
								"text": " @title SelfDestructSender\n @dev A simple contract to receive Ether and then self-destruct, sending its balance\n to a target address. Used for the EtherVault assignment self-destruct challenge."
							},
							"fullyImplemented": true,
							"id": 67,
							"linearizedBaseContracts": [
								67
							],
							"name": "SelfDestructSender",
							"nameLocation": "333:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "immutable",
									"name": "etherVaultAddress",
									"nameLocation": "462:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 67,
									"src": "436:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 3,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "436:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "87e69625",
									"id": 7,
									"mutability": "constant",
									"name": "REQUIRED_AMOUNT",
									"nameLocation": "591:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 67,
									"src": "567:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "567:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e30303035",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "609:12:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000000000000_by_1",
											"typeString": "int_const 500000000000000"
										},
										"value": "0.0005"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "840:147:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 14,
																"name": "_etherVaultAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "859:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 17,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "889:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 16,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "881:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 15,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "881:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "881:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "859:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45746865725661756c7420616464726573732063616e6e6f74206265207a65726f2e",
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "893:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90270d20ce1fcedc563bc389bb4acf211896d52bc5f1aa5c2918905b16c34973",
																"typeString": "literal_string \"EtherVault address cannot be zero.\""
															},
															"value": "EtherVault address cannot be zero."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_90270d20ce1fcedc563bc389bb4acf211896d52bc5f1aa5c2918905b16c34973",
																"typeString": "literal_string \"EtherVault address cannot be zero.\""
															}
														],
														"id": 13,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "851:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "851:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "851:79:0"
											},
											{
												"expression": {
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 23,
														"name": "etherVaultAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "941:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 24,
														"name": "_etherVaultAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "961:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "941:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "941:38:0"
											}
										]
									},
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "630:156:0",
										"text": " @dev Constructor sets the target EtherVault address.\n @param _etherVaultAddress The address of the deployed EtherVault contract."
									},
									"id": 28,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "_etherVaultAddress",
												"nameLocation": "820:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "804:34:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "804:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:36:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "840:0:0"
									},
									"scope": 67,
									"src": "792:195:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "1219:126:0",
										"statements": []
									},
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "995:191:0",
										"text": " @dev This function allows the contract to receive Ether.\n It's triggered when Ether is sent to this contract's address\n without calling a specific function."
									},
									"id": 33,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1199:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:0:0"
									},
									"scope": 67,
									"src": "1192:153:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "2251:489:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 40,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2439:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SelfDestructSender_$67",
																				"typeString": "contract SelfDestructSender"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SelfDestructSender_$67",
																				"typeString": "contract SelfDestructSender"
																			}
																		],
																		"id": 39,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2431:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 38,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2431:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2431:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 42,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2445:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2431:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 43,
																"name": "REQUIRED_AMOUNT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "2456:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2431:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742073656e642065786163746c7920302e30303035206574686572",
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2473:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa",
																"typeString": "literal_string \"Must send exactly 0.0005 ether\""
															},
															"value": "Must send exactly 0.0005 ether"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa",
																"typeString": "literal_string \"Must send exactly 0.0005 ether\""
															}
														],
														"id": 37,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2423:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2423:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "2423:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 49,
															"name": "etherVaultAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "2714:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 48,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "2701:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2701:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "2701:31:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1353:852:0",
										"text": " @dev Triggers the self-destruct mechanism.\n This sends the contract's entire balance to the etherVaultAddress\n and removes the contract code from the blockchain (in pre-EIP-6780 behavior).\n Includes the specific require check required by the assignment.\n NOTE: 'selfdestruct' is deprecated and its behavior changed with EIP-6780 (Cancun hard fork).\n For new contracts deployed post-Cancun, it might not fully remove contract code/storage\n unless created in the same transaction. However, this assignment specifically requires\n using 'selfdestruct' with a particular error message, indicating it's testing\n understanding of this concept as relevant to the challenge environment.\n Therefore, we use 'selfdestruct' here as required by the assignment instructions."
									},
									"functionSelector": "1b3d34bc",
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "triggerSelfDestruct",
									"nameLocation": "2220:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2239:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2251:0:0"
									},
									"scope": 67,
									"src": "2211:529:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "2895:47:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 61,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2921:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_SelfDestructSender_$67",
																	"typeString": "contract SelfDestructSender"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_SelfDestructSender_$67",
																	"typeString": "contract SelfDestructSender"
																}
															],
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2913:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 59,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2913:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2913:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2927:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2913:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 58,
												"id": 64,
												"nodeType": "Return",
												"src": "2906:28:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "2748:87:0",
										"text": " @dev Optional: A function to check the contract's current balance."
									},
									"functionSelector": "12065fe0",
									"id": 66,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "2850:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:2:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2886:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2885:9:0"
									},
									"scope": 67,
									"src": "2841:101:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 68,
							"src": "324:2621:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "40:2907:0"
				},
				"id": 0
			}
		}
	}
}